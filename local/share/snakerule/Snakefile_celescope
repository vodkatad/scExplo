include: "conf.sk"

rule create_map:
    output: 'mapfile.tsv'
    params: fdir=FQ_DIR, ncells=NCELLS
    run:
        with open(output[0], 'w') as o:
            for k in SAMPLES.keys():
                o.write(k + "\t" + params.fdir + "\t" + SAMPLES[k] + "\t" + str(params.ncells) +"\n")

rule create_run:
    input: mapf='mapfile.tsv'
    output: directory('shell')
    params: cores=CORES, ref=REF_DIR
    shell: 
        """
        multi_rna\
	    --mapfile {input.mapf}\
	    --genomeDir {params.ref}\
	    --thread {params.cores}\
	    --mod shell\
        --rm_files
       """

rule cele_sample:
   input: "shell/{sample}.sh"
   output: touch("{sample}.done")
   shell: "sh {input}"

rule all_cele_samples:
    input: expand("{sample}.done", sample=SAMPLES.values())

rule clean:
    shell:
        """
         rm -f */*/*_count_detail.txt
         rm -f  */*/*fq
         rm -f */*/*counts.txt
         rm -f */*/*bam
         rm -rf */06.analysis
         rm -rf */03.STAR
         rm -rf */03.featureCounts
        """

### conversion from mtx to cvs for rCASC
rule all_csv:
    input: expand("{sample}.csv", sample=SAMPLES.values())

rule conversion_mtx_to_csv:
    input: "{sample}/05.count/{sample}_filtered_feature_bc_matrix/" 
    output: "{sample}.csv"
    params: tool=SRC_DIR+'/cellranger-3.1.0/cellranger'
    shell: 
        """
            {params.tool} mat2csv {input} {output}
        """
